/* eslint-disable */
import * as Router from 'expo-router';

export * from 'expo-router';

declare module 'expo-router' {
  export namespace ExpoRouter {
    export interface __routes<T extends string | object = string> {
      hrefInputParams: { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/theme`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/settings` | `/settings`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/temp` | `/temp`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Carpool/createRide` | `/Carpool/createRide`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Carpool/NewRide` | `/Carpool/NewRide`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Carpool/postRequest` | `/Carpool/postRequest`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Community/community` | `/Community/community`; params?: Router.UnknownInputParams; } | { pathname: `/Login/login`; params?: Router.UnknownInputParams; } | { pathname: `/OnboardForms/child`; params?: Router.UnknownInputParams; } | { pathname: `/OnboardForms/parent`; params?: Router.UnknownInputParams; } | { pathname: `/OnboardForms/vehicle`; params?: Router.UnknownInputParams; } | { pathname: `/Register/register`; params?: Router.UnknownInputParams; } | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `${'/(tabs)'}/messages/[userId]` | `/messages/[userId]`, params: Router.UnknownInputParams & { userId: string | number; } };
      hrefOutputParams: { pathname: Router.RelativePathString, params?: Router.UnknownOutputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownOutputParams } | { pathname: `/theme`; params?: Router.UnknownOutputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/settings` | `/settings`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/temp` | `/temp`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/Carpool/createRide` | `/Carpool/createRide`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/Carpool/NewRide` | `/Carpool/NewRide`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/Carpool/postRequest` | `/Carpool/postRequest`; params?: Router.UnknownOutputParams; } | { pathname: `${'/(tabs)'}/Community/community` | `/Community/community`; params?: Router.UnknownOutputParams; } | { pathname: `/Login/login`; params?: Router.UnknownOutputParams; } | { pathname: `/OnboardForms/child`; params?: Router.UnknownOutputParams; } | { pathname: `/OnboardForms/parent`; params?: Router.UnknownOutputParams; } | { pathname: `/OnboardForms/vehicle`; params?: Router.UnknownOutputParams; } | { pathname: `/Register/register`; params?: Router.UnknownOutputParams; } | { pathname: `/+not-found`, params: Router.UnknownOutputParams & {  } } | { pathname: `${'/(tabs)'}/messages/[userId]` | `/messages/[userId]`, params: Router.UnknownOutputParams & { userId: string; } };
      href: Router.RelativePathString | Router.ExternalPathString | `/theme${`?${string}` | `#${string}` | ''}` | `/_sitemap${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}${`?${string}` | `#${string}` | ''}` | `/${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/settings${`?${string}` | `#${string}` | ''}` | `/settings${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/temp${`?${string}` | `#${string}` | ''}` | `/temp${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/Carpool/createRide${`?${string}` | `#${string}` | ''}` | `/Carpool/createRide${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/Carpool/NewRide${`?${string}` | `#${string}` | ''}` | `/Carpool/NewRide${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/Carpool/postRequest${`?${string}` | `#${string}` | ''}` | `/Carpool/postRequest${`?${string}` | `#${string}` | ''}` | `${'/(tabs)'}/Community/community${`?${string}` | `#${string}` | ''}` | `/Community/community${`?${string}` | `#${string}` | ''}` | `/Login/login${`?${string}` | `#${string}` | ''}` | `/OnboardForms/child${`?${string}` | `#${string}` | ''}` | `/OnboardForms/parent${`?${string}` | `#${string}` | ''}` | `/OnboardForms/vehicle${`?${string}` | `#${string}` | ''}` | `/Register/register${`?${string}` | `#${string}` | ''}` | { pathname: Router.RelativePathString, params?: Router.UnknownInputParams } | { pathname: Router.ExternalPathString, params?: Router.UnknownInputParams } | { pathname: `/theme`; params?: Router.UnknownInputParams; } | { pathname: `/_sitemap`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}` | `/`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/settings` | `/settings`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/temp` | `/temp`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Carpool/createRide` | `/Carpool/createRide`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Carpool/NewRide` | `/Carpool/NewRide`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Carpool/postRequest` | `/Carpool/postRequest`; params?: Router.UnknownInputParams; } | { pathname: `${'/(tabs)'}/Community/community` | `/Community/community`; params?: Router.UnknownInputParams; } | { pathname: `/Login/login`; params?: Router.UnknownInputParams; } | { pathname: `/OnboardForms/child`; params?: Router.UnknownInputParams; } | { pathname: `/OnboardForms/parent`; params?: Router.UnknownInputParams; } | { pathname: `/OnboardForms/vehicle`; params?: Router.UnknownInputParams; } | { pathname: `/Register/register`; params?: Router.UnknownInputParams; } | `/+not-found` | `${'/(tabs)'}/messages/${Router.SingleRoutePart<T>}` | `/messages/${Router.SingleRoutePart<T>}` | { pathname: `/+not-found`, params: Router.UnknownInputParams & {  } } | { pathname: `${'/(tabs)'}/messages/[userId]` | `/messages/[userId]`, params: Router.UnknownInputParams & { userId: string | number; } };
    }
  }
}
